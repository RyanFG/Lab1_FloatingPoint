library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity MantissaPath is
    port (
        clk : in std_logic;
        rst : in std_logic;
        loadAM, loadBM, loadRM, ShiftLRM, ShiftRRM : in std_logic;
        Fx, Fy, RM : in std_logic_vector (7 downto 0);
        Cout, great127, lessN126 : out std_logic
    );
end MantissaPath;

architecture rtl of MantissaPath is

component eightBitRegister is
PORT(	resetBar, load, clock: IN STD_LOGIC;
			inValues: IN STD_LOGIC_VECTOR(7 downto 0);
			outValues: OUT STD_LOGIC_VECTOR(7 downto 0)
	);
end component;

component ClassicMultiplier is
Port ( A : in  STD_LOGIC_VECTOR (7 downto 0);
           B : in  STD_LOGIC_VECTOR (7 downto 0);
           P : out  STD_LOGIC_VECTOR (15 downto 0));
end component;

component SixteenBitShiftRegister is
    port (
        i_resetBar, i_load, i_clock, i_value: in std_logic;
        rst : in std_logic;
        i_shift : in std_logic_vector (15 downto 0);
        ShiftLeftRM, ShiftRightRM, LoadRM : in std_logic;
        o_Shift : out std_logic_vector (15 downto 0)

    );
end component;
    
component eightBitGreaterComparator is
    PORT(	x,y: IN STD_LOGIC_VECTOR(6 downto 0);
			eq: OUT STD_LOGIC;
			xGreaterZero: OUT STD_LOGIC;
			yGreaterZero: OUT STD_LOGIC
	);
end component;
    begin

end architecture;